---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.0
  name: deploymentpolicies.policy.skycluster.io
spec:
  group: policy.skycluster.io
  names:
    kind: DeploymentPolicy
    listKind: DeploymentPolicyList
    plural: deploymentpolicies
    singular: deploymentpolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeploymentPolicy is the Schema for the deploymentpolicies API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeploymentPolicySpec defines the desired state of DeploymentPolicy.
            properties:
              deploymentPolicies:
                items:
                  properties:
                    deploymentRef:
                      description: DeploymentRef is the reference to the deployment
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    locationConstraint:
                      description: LocationConstraint is the location constraint for
                        the deployment
                      properties:
                        permitted:
                          description: Permitted is the list of locations that are
                            permitted
                          items:
                            properties:
                              name:
                                description: Name is the name of the location e.g.
                                  aws, gcp, os (OpenStack)
                                type: string
                              region:
                                description: Region is the region of the location
                                type: string
                              type:
                                description: Type is the type of the location e.g.
                                  cloud, nte, edge
                                type: string
                              zone:
                                description: Zone is the zone of the location
                                type: string
                            type: object
                          type: array
                        required:
                          description: Required is the list of locations that are
                            required for deployment
                          items:
                            properties:
                              name:
                                description: Name is the name of the location e.g.
                                  aws, gcp, os (OpenStack)
                                type: string
                              region:
                                description: Region is the region of the location
                                type: string
                              type:
                                description: Type is the type of the location e.g.
                                  cloud, nte, edge
                                type: string
                              zone:
                                description: Zone is the zone of the location
                                type: string
                            type: object
                          type: array
                      type: object
                    performanceConstraint:
                      description: PerformanceConstraint is the performance constraint
                        for the deployment
                      properties:
                        customMetrics:
                          items:
                            properties:
                              endpoint:
                                description: Endpoint is the endpoint of the custom
                                  metric
                                type: string
                              name:
                                description: Name is the name of the custom metric
                                type: string
                            required:
                            - endpoint
                            - name
                            type: object
                          type: array
                        responseTime:
                          type: string
                      type: object
                  required:
                  - deploymentRef
                  type: object
                type: array
            required:
            - deploymentPolicies
            type: object
          status:
            description: DeploymentPolicyStatus defines the observed state of DeploymentPolicy.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
