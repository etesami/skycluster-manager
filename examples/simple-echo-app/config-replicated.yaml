apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-app-vaughan
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echo-app
      skycluster.io/provider-identifier: os-vaughan-zone-1
  template:
    metadata:
      labels:
        app: echo-app
        skycluster.io/provider-identifier: os-vaughan-zone-1
    spec:
      containers:
      - name: echo
        image: registry.skycluster.io/alpine-curl
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              CONTENT=$(ip route get 8.8.8.8 | awk '{printf "Hey, my ip is: %s,", $7; exit}')
              HOSTNAME=$(hostname)
              CONTENT="$CONTENT\tHostname: $HOSTNAME"
              CONTENT_LENGTH=$(echo -n "$CONTENT" | wc -c)
              echo -e "HTTP/1.1 200 OK\r\nContent-Length: $CONTENT_LENGTH\r\n\r\n$CONTENT" | nc -l -p 8080
            done
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        skycluster.io/provider-identifier: os-vaughan-zone-1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-app-scinet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: echo-app
      skycluster.io/provider-identifier: os-scinet-zone-1
  template:
    metadata:
      labels:
        app: echo-app
        skycluster.io/provider-identifier: os-scinet-zone-1
    spec:
      containers:
      - name: echo
        image: registry.skycluster.io/alpine-curl
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              CONTENT=$(ip route get 8.8.8.8 | awk '{printf "Hey, my ip is: %s,", $7; exit}')
              HOSTNAME=$(hostname)
              CONTENT="$CONTENT\tHostname: $HOSTNAME"
              CONTENT_LENGTH=$(echo -n "$CONTENT" | wc -c)
              echo -e "HTTP/1.1 200 OK\r\nContent-Length: $CONTENT_LENGTH\r\n\r\n$CONTENT" | nc -l -p 8080
            done
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: regcred
      nodeSelector:
        skycluster.io/provider-identifier: os-scinet-zone-1
      # affinity:
      #  podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchLabels:
      #           app: echo-app
      #       topologyKey: "skycluster.io/provider-identifier"
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app-svc
  # labels:
  #   # setting provider-region label to scinet
  #   # results in allocation of IP from scinet's IP pool
  #   # [only if the type is LoadBalancer]
  #   skycluster.io/provider-identifier: os-scinet-zone-1
spec:
  # Since we use istio, the trafficDistribution does not need to be set
  # trafficDistribution: PreferClose
  # type: LoadBalancer
  selector:
    app: echo-app
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app-svc-scinet
  labels:
    version: os-scinet-zone-1
spec:
  selector:
    app: echo-app
    skycluster.io/provider-identifier: os-scinet-zone-1
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: echo-app-svc-vaughan
  labels:
    version: os-vaughan-zone-1
spec:
  selector:
    app: echo-app
    skycluster.io/provider-identifier: os-vaughan-zone-1
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.istio.io/v1
kind: DestinationRule
metadata:
  name: echo-app
spec:
  host: echo-app-svc.default.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_REQUEST
      localityLbSetting:
        enabled: true
        # Either failover or distribute can be set
        failover:
          - from: os-scinet-zone-1
            to: os-vaughan-zone-1
          - from: os-vaughan-zone-1
            to: os-scinet-zone-1
        # distribute:
        #   - from: "os-scinet-zone-1/os-scinet-zone-1/*"
        #     to:
        #       "os-scinet-zone-1/os-scinet-zone-1/*": 100
        #   - from: "os-vaughan-zone-1/os-vaughan-zone-1/*"
        #     to:
        #       "os-vaughan-zone-1/os-vaughan-zone-1/*": 100
    outlierDetection:
      consecutive5xxErrors: 5
      interval: 5s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
---
# To access the service from outside the cluster
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: echo-app-gateway
spec:
  infrastructure:
    labels:
      skycluster.io/provider-identifier: os-scinet-zone-1
  gatewayClassName: istio
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Same
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: echo-app
spec:
  parentRefs:
  - name: echo-app-gateway
  rules:
  - backendRefs:
    - name: echo-app-svc-scinet
      port: 8080
    matches:
    - path:
        type: Exact
        value: /scinet
  - backendRefs:
    - name: echo-app-svc-vaughan
      port: 8080
    matches:
    - path:
        type: Exact
        value: /vaughan
---